/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    int maxPathSum=Integer.MIN_VALUE;
    public int maxPathSum(TreeNode A) {
        int x = findMaxPathSum(A);
        return Math.max(maxPathSum,x);
    }

    private int findMaxPathSum(TreeNode A){

        if(A==null){
            return 0;
        }

        int leftMax = Math.max(0,findMaxPathSum(A.left));
        int rightMax = Math.max(0,findMaxPathSum(A.right));

        maxPathSum = Math.max(maxPathSum,A.val+leftMax+rightMax);

        return A.val+Math.max(leftMax,rightMax);
    }
}
