Given a string A, find if there is any subsequence that repeats itself.

A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

public class Solution {
    public int anytwo(String A) {
        int n = A.length();
        int m = n;

        int[][] dp = new int[n][m];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }

        return lcs(dp,A,n-1,m-1)>=2?1:0;


    }
    private int lcs(int[][] dp, String A,int n, int m){

        if(n<0 || m<0){
            return 0;
        }

        if(dp[n][m]!=-1){
            return dp[n][m];
        }

        if(n!=m && A.charAt(n)==A.charAt(m)){
            return dp[n][m]=1+lcs(dp,A,n-1,m-1);
        }

        return dp[n][m] = Math.max(lcs(dp,A,n-1,m), lcs(dp,A,n,m-1));
    }
}
